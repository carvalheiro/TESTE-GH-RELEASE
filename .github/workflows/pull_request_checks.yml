
name: Pull Request Checks

on:
  workflow_dispatch:
    inputs:
      run_all_tests:
        type: boolean
        description: Should jest run for all files? If false, will just run for the ones we changed.
        default: false
  pull_request_target:
    types: [labeled]
  pull_request:
    branches:
      - 'main'
    types: [closed]

jobs:
  generate-tag:
    if: github.event.pull_request.merged == true
    name: Tag Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Push Tag
        run: |
          TEMP=${GITHUB_HEAD_REF##*/}
          TAG_NAME=${TEMP##[Cc][Kk]-[0-9]*-}
          git tag ${TAG_NAME}
          git push origin ${TAG_NAME}
  install:
    if: always() && github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request_target' && github.event.label.name == 'ci:run' || github.event.label.name == 'ci:run-all')
    runs-on: ubuntu-latest
    name: Install
    needs: [generate-tag]
    steps:
      - uses: actions/checkout@v3
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env: 
          TESTE_1: ${{ github.event.label.name }}
          TESTE_2: ${{ github.envet.label.name == 'ci:run' }}
          TESTE_3: ${{ github.event.inputs.run_all_tests }}          
          TESTE_4: ${{ github.event.inputs.run_all_tests == 'true' }}          
        run: |
          echo $TESTE_1,
          echo $TESTE_2,
          echo $TESTE_3,
          echo $TESTE_4
  lint:
    name: Lint
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - name: ESLint
        run: echo Rodou o Lint
  jest:
    name: Automated Tests
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - name: Automated Tests
        run: echo Rodou o Tests
  ready_to_merge:
    name: Ready to Merge
    runs-on: ubuntu-20.04
    if: always() # always run, so we never skip the check
    needs: [install, lint, jest]
    env:
      PASSED: ${{ needs.install.result == 'success'  && needs.lint.result == 'success' && needs.jest.result == 'success' }}
      TEST1: ${{ needs.install.result }}
      TEST2: ${{ needs.lint.result }}
      TEST3: ${{ needs.jest.result }}
    steps:
      # pass step only when output of previous after-shards job is set
      # in case at least one of the shard fails, after-shards is skipped
      # and the output will not be set, which will then cause the ci job to fail
      - run: echo $TEST1
      - run: echo $TEST2
      - run: echo $TEST3
      - run: echo $PASSED
      - run: |
          if [[ $PASSED == "true" ]]; then
            echo "Tests has passed"
            exit 0
          else
            echo "Tests has failed"
            exit 1
          fi
      
    
  
